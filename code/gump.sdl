setcpm(40)

//gain
const melgain = slider(0,0,1)
const cgain = slider(0,0,1)
const again = slider(0.473,0,1)
const a2gain = slider(0.432,0,1)

//energy
const melody = slider(1672.4,200,2000)
const countermelody = slider(1046,200,2000)
const arp = sine.segment(16).range(100,2000)
const arp2 = sine.segment(2.5).range(100,2000)

const scales = ("<e:minor:pentatonic a:minor:pentatonic c:minor:pentatonic d:minor:pentatonic f:minor g:penatonic>/4")

$melody: n("{<[9 [0 2] 4 5 7 8 [10 6]]>}%2 | {<[7 [5 1] 0 3 1 4 [11 5]]>}%2")
.s("gm_recorder, gm_electric_guitar_clean")
.scale(scales)
  .transpose(-12)
  .delay(0.75)
  .lpf(melody)
  .pan(sine.range(0, 1))
  .lpenv(sine.range(0.5, 1))
  .gain(melgain)
._pianoroll()


$countermelody: n("<[9 11] 11 11 <[8 12 8]> 13 [8 12] 10>".add("<0 3 -1 -4 2>"))
.s("gm_piano, gm_soprano_sax, gm_clarinet")
.scale(scales)
.lpf(countermelody)
.pan(sine.range(0,1))
  .transpose(-12)
  .delay(0.3)
.lpenv(sine.range(0.5, 1))
  .gain(cgain)
._pianoroll()

$arp: n("{{0 1 2 3 4}%8, {3 4 5 6 7}%8}%2".add("<-2 -1 0 1 2 1 0 -1>").palindrome())
.s("gm_vibraphone, gm_epiano1")
  .scale(scales)
.lpf(arp)
.pan(sine.range(0,1))
  .transpose(-12)
  .delay(0.5)
.lpenv(2)
  .gain(again)
._pianoroll()


$arp2: n("<{{0 1 2 3 4}%8, {3 4 5 6 7}%8}/2>".add("<-2 -1 0 1 2 1 0 -1>").palindrome())
.s("gm_glockenspiel")
  .scale(scales)
.lpf(arp2)
.pan(sine.range(0,1))
  .transpose(24)
  .delay(0.3)
.lpenv(2)
  .gain(a2gain)
._pianoroll()

all(x => x.pitchwheel())
all(x => x.room(sine.range(0, 2)))
